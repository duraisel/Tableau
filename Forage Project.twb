<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <Layers />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='daikibo-telemetry-data' inline='true' name='federated.1i5c78k0h2fm5a1blay5o0tqzj37' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='daikibo-telemetry-data' name='semistructpassivestore-direct.1eiixuf1vav0tw17l91wa1462tig'>
            <connection class='semistructpassivestore-direct' directory='C:/Users/apdur/Downloads/daikibo-telemetry-data.json' filename='daikibo-telemetry-data.json' password='' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[daikibo-telemetry-data.json]'>
                  <map key='data' value='true' />
                  <map key='location' value='true' />
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='semistructpassivestore-direct.1eiixuf1vav0tw17l91wa1462tig' name='daikibo-telemetry-data.json' table='[daikibo-telemetry-data.json]' type='table' />
        <cols>
          <map key='[Document Index (generated)]' value='[daikibo-telemetry-data.json].[Document Index (generated)]' />
          <map key='[area]' value='[daikibo-telemetry-data.json].[location.area]' />
          <map key='[city]' value='[daikibo-telemetry-data.json].[location.city]' />
          <map key='[country]' value='[daikibo-telemetry-data.json].[location.country]' />
          <map key='[deviceID]' value='[daikibo-telemetry-data.json].[deviceID]' />
          <map key='[deviceType]' value='[daikibo-telemetry-data.json].[deviceType]' />
          <map key='[factory]' value='[daikibo-telemetry-data.json].[location.factory]' />
          <map key='[section]' value='[daikibo-telemetry-data.json].[location.section]' />
          <map key='[status]' value='[daikibo-telemetry-data.json].[data.status]' />
          <map key='[temperature]' value='[daikibo-telemetry-data.json].[data.temperature]' />
          <map key='[timestamp]' value='[daikibo-telemetry-data.json].[timestamp]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[daikibo-telemetry-data.json_1D2E1091A27446D3AB51F0D4ABC163D9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>data.status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[status]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>data.status</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_1D2E1091A27446D3AB51F0D4ABC163D9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>data.temperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temperature]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>data.temperature</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[daikibo-telemetry-data.json_1D2E1091A27446D3AB51F0D4ABC163D9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deviceID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[deviceID]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>deviceID</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_1D2E1091A27446D3AB51F0D4ABC163D9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deviceType</remote-name>
            <remote-type>130</remote-type>
            <local-name>[deviceType]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>deviceType</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_1D2E1091A27446D3AB51F0D4ABC163D9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.area</remote-name>
            <remote-type>130</remote-type>
            <local-name>[area]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.area</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_1D2E1091A27446D3AB51F0D4ABC163D9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.city</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_1D2E1091A27446D3AB51F0D4ABC163D9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.country</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_1D2E1091A27446D3AB51F0D4ABC163D9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.factory</remote-name>
            <remote-type>130</remote-type>
            <local-name>[factory]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.factory</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_1D2E1091A27446D3AB51F0D4ABC163D9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.section</remote-name>
            <remote-type>130</remote-type>
            <local-name>[section]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.section</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_1D2E1091A27446D3AB51F0D4ABC163D9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timestamp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[timestamp]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>timestamp</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[daikibo-telemetry-data.json_1D2E1091A27446D3AB51F0D4ABC163D9]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Unhealthy' datatype='integer' name='[Calculation_1463951362186014725]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [status]= &quot;unhealthy&quot; THEN 10 ELSE 0 END' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='daikibo-telemetry-data.json' datatype='table' name='[__tableau_internal_object_id__].[daikibo-telemetry-data.json_1D2E1091A27446D3AB51F0D4ABC163D9]' role='measure' type='quantitative' />
      <column caption='Area' datatype='string' name='[area]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.area</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.city</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.country</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Device ID' datatype='string' name='[deviceID]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>deviceID</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Device Type' datatype='string' name='[deviceType]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>deviceType</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Factory' datatype='string' name='[factory]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.factory</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Section' datatype='string' name='[section]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.section</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>data.status</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Temperature' datatype='real' name='[temperature]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>data.temperature</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Timestamp' datatype='real' name='[timestamp]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>timestamp</run>
          </formatted-text>
        </desc>
      </column>
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <group caption='Action (Country)' hidden='true' name='[Action (Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[country]' />
        </groupfilter>
      </group>
      <group caption='Action (Factory)' hidden='true' name='[Action (Factory)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[factory]' />
        </groupfilter>
      </group>
      <folders-common>
        <folder name='Daikibo-Telemetry-Data'>
          <folder-item name='[Document Index (generated)]' type='field' />
          <folder-item name='[deviceID]' type='field' />
          <folder-item name='[deviceType]' type='field' />
        </folder>
        <folder name='Data'>
          <folder-item name='[status]' type='field' />
        </folder>
        <folder name='Location'>
          <folder-item name='[area]' type='field' />
          <folder-item name='[city]' type='field' />
          <folder-item name='[country]' type='field' />
          <folder-item name='[factory]' type='field' />
          <folder-item name='[section]' type='field' />
        </folder>
      </folders-common>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/apdur/AppData/Local/Temp/TableauTemp/#TableauTemp_0c6531h13i9slw1er9zcq19tg6gl.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='05/10/2025 06:55:26 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[Document Index (generated)]' value='[Extract].[Document Index (generated)]' />
            <map key='[area]' value='[Extract].[location.area]' />
            <map key='[city]' value='[Extract].[location.city]' />
            <map key='[country]' value='[Extract].[location.country]' />
            <map key='[deviceID]' value='[Extract].[deviceID]' />
            <map key='[deviceType]' value='[Extract].[deviceType]' />
            <map key='[factory]' value='[Extract].[location.factory]' />
            <map key='[section]' value='[Extract].[location.section]' />
            <map key='[status]' value='[Extract].[data.status]' />
            <map key='[temperature]' value='[Extract].[data.temperature]' />
            <map key='[timestamp]' value='[Extract].[timestamp]' />
          </cols>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Document Index (generated)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Document Index (generated)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Document Index (generated)</remote-alias>
              <ordinal>0</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>160704</approx-count>
              <contains-null>true</contains-null>
              <object-id>[daikibo-telemetry-data.json_1D2E1091A27446D3AB51F0D4ABC163D9]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>data.status</remote-name>
              <remote-type>129</remote-type>
              <local-name>[status]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>data.status</remote-alias>
              <ordinal>1</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_1D2E1091A27446D3AB51F0D4ABC163D9]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>data.temperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[temperature]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>data.temperature</remote-alias>
              <ordinal>2</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <object-id>[daikibo-telemetry-data.json_1D2E1091A27446D3AB51F0D4ABC163D9]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deviceID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[deviceID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deviceID</remote-alias>
              <ordinal>3</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>36</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_1D2E1091A27446D3AB51F0D4ABC163D9]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deviceType</remote-name>
              <remote-type>129</remote-type>
              <local-name>[deviceType]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deviceType</remote-alias>
              <ordinal>4</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_1D2E1091A27446D3AB51F0D4ABC163D9]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.area</remote-name>
              <remote-type>129</remote-type>
              <local-name>[area]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.area</remote-alias>
              <ordinal>5</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_1D2E1091A27446D3AB51F0D4ABC163D9]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.city</remote-name>
              <remote-type>129</remote-type>
              <local-name>[city]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.city</remote-alias>
              <ordinal>6</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_1D2E1091A27446D3AB51F0D4ABC163D9]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.country</remote-alias>
              <ordinal>7</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_1D2E1091A27446D3AB51F0D4ABC163D9]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.factory</remote-name>
              <remote-type>129</remote-type>
              <local-name>[factory]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.factory</remote-alias>
              <ordinal>8</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_1D2E1091A27446D3AB51F0D4ABC163D9]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.section</remote-name>
              <remote-type>129</remote-type>
              <local-name>[section]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.section</remote-alias>
              <ordinal>9</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_1D2E1091A27446D3AB51F0D4ABC163D9]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>timestamp</remote-name>
              <remote-type>5</remote-type>
              <local-name>[timestamp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>timestamp</remote-alias>
              <ordinal>10</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6432</approx-count>
              <contains-null>true</contains-null>
              <object-id>[daikibo-telemetry-data.json_1D2E1091A27446D3AB51F0D4ABC163D9]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;china&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;japan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;germany&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='daikibo-telemetry-data.json' id='daikibo-telemetry-data.json_1D2E1091A27446D3AB51F0D4ABC163D9'>
            <properties context=''>
              <relation connection='semistructpassivestore-direct.1eiixuf1vav0tw17l91wa1462tig' name='daikibo-telemetry-data.json' table='[daikibo-telemetry-data.json]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_80875C72D4ED434A849F1A82B2781033]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Factory' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_1FF97A0DCFCC46E8A27C24CE9E617A54]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Location' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Device type'>
      <table>
        <view>
          <datasources>
            <datasource caption='daikibo-telemetry-data' name='federated.1i5c78k0h2fm5a1blay5o0tqzj37' />
          </datasources>
          <datasource-dependencies datasource='federated.1i5c78k0h2fm5a1blay5o0tqzj37'>
            <column caption='Unhealthy' datatype='integer' name='[Calculation_1463951362186014725]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [status]= &quot;unhealthy&quot; THEN 10 ELSE 0 END' />
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <desc>
                <formatted-text>
                  <run>location.country</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Device Type' datatype='string' name='[deviceType]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>deviceType</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Factory' datatype='string' name='[factory]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>location.factory</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[deviceType]' derivation='None' name='[none:deviceType:nk]' pivot='key' type='nominal' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>data.status</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Calculation_1463951362186014725]' derivation='Sum' name='[sum:Calculation_1463951362186014725:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i5c78k0h2fm5a1blay5o0tqzj37].[Action (Country)]'>
            <groupfilter function='level-members' level='[country]' user:ui-action-filter='[Action2_1FF97A0DCFCC46E8A27C24CE9E617A54]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1i5c78k0h2fm5a1blay5o0tqzj37].[Action (Factory)]'>
            <groupfilter function='level-members' level='[factory]' user:ui-action-filter='[Action1_80875C72D4ED434A849F1A82B2781033]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1i5c78k0h2fm5a1blay5o0tqzj37].[Action (Factory)]</column>
            <column>[federated.1i5c78k0h2fm5a1blay5o0tqzj37].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1i5c78k0h2fm5a1blay5o0tqzj37].[none:deviceType:nk]' value='98' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#75a1c7' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1i5c78k0h2fm5a1blay5o0tqzj37].[sum:Calculation_1463951362186014725:qk]</rows>
        <cols>[federated.1i5c78k0h2fm5a1blay5o0tqzj37].[none:deviceType:nk]</cols>
      </table>
      <simple-id uuid='{166B9AAC-1C38-4C3A-96F7-3EE8DECCE5BD}' />
    </worksheet>
    <worksheet name='Factory'>
      <table>
        <view>
          <datasources>
            <datasource caption='daikibo-telemetry-data' name='federated.1i5c78k0h2fm5a1blay5o0tqzj37' />
          </datasources>
          <datasource-dependencies datasource='federated.1i5c78k0h2fm5a1blay5o0tqzj37'>
            <column caption='Unhealthy' datatype='integer' name='[Calculation_1463951362186014725]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [status]= &quot;unhealthy&quot; THEN 10 ELSE 0 END' />
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <desc>
                <formatted-text>
                  <run>location.country</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Factory' datatype='string' name='[factory]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>location.factory</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[factory]' derivation='None' name='[none:factory:nk]' pivot='key' type='nominal' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>data.status</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Calculation_1463951362186014725]' derivation='Sum' name='[sum:Calculation_1463951362186014725:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i5c78k0h2fm5a1blay5o0tqzj37].[Action (Country)]'>
            <groupfilter function='level-members' level='[country]' user:ui-action-filter='[Action2_1FF97A0DCFCC46E8A27C24CE9E617A54]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1i5c78k0h2fm5a1blay5o0tqzj37].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1i5c78k0h2fm5a1blay5o0tqzj37].[none:factory:nk]' value='202' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f17b79' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1i5c78k0h2fm5a1blay5o0tqzj37].[sum:Calculation_1463951362186014725:qk]</rows>
        <cols>[federated.1i5c78k0h2fm5a1blay5o0tqzj37].[none:factory:nk]</cols>
      </table>
      <simple-id uuid='{C028F03F-C117-444C-B9F9-6C6FADA8AEFC}' />
    </worksheet>
    <worksheet name='Location'>
      <table>
        <view>
          <datasources>
            <datasource caption='daikibo-telemetry-data' name='federated.1i5c78k0h2fm5a1blay5o0tqzj37' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1i5c78k0h2fm5a1blay5o0tqzj37'>
            <column caption='Unhealthy' datatype='integer' name='[Calculation_1463951362186014725]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [status]= &quot;unhealthy&quot; THEN 10 ELSE 0 END' />
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <desc>
                <formatted-text>
                  <run>location.country</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Factory' datatype='string' name='[factory]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>location.factory</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>data.status</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Calculation_1463951362186014725]' derivation='Sum' name='[sum:Calculation_1463951362186014725:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i5c78k0h2fm5a1blay5o0tqzj37].[Action (Factory)]'>
            <groupfilter function='level-members' level='[factory]' user:ui-action-filter='[Action1_80875C72D4ED434A849F1A82B2781033]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1i5c78k0h2fm5a1blay5o0tqzj37].[Action (Factory)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes customization-axis='layer'>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1i5c78k0h2fm5a1blay5o0tqzj37].[none:country:nk]' />
            </encodings>
          </pane>
          <pane generated-title='Country' id='0' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1i5c78k0h2fm5a1blay5o0tqzj37].[none:country:nk]' />
              <tooltip column='[federated.1i5c78k0h2fm5a1blay5o0tqzj37].[sum:Calculation_1463951362186014725:qk]' />
              <geometry column='[federated.1i5c78k0h2fm5a1blay5o0tqzj37].[Geometry (generated)]' />
            </encodings>
          </pane>
          <pane generated-title='Country (2)' id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1i5c78k0h2fm5a1blay5o0tqzj37].[none:country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1i5c78k0h2fm5a1blay5o0tqzj37].[Latitude (generated)]</rows>
        <cols>[federated.1i5c78k0h2fm5a1blay5o0tqzj37].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{5157744B-BC56-4B61-B766-0BC262404ED7}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='860' maxwidth='650' minheight='560' minwidth='420' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98046' id='23' param='horz' type-v2='layout-flow' w='97538' x='1231' y='977'>
            <zone h='98046' id='14' param='vert' type-v2='layout-flow' w='92615' x='1231' y='977'>
              <zone h='98046' id='12' param='horz' type-v2='layout-flow' w='92615' x='1231' y='977'>
                <zone h='98046' id='9' param='horz' type-v2='layout-flow' w='92615' x='1231' y='977'>
                  <zone h='98046' id='7' type-v2='layout-basic' w='92615' x='1231' y='977'>
                    <zone h='32679' id='3' name='Factory' w='92615' x='1231' y='977'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='32685' id='5' name='Device type' w='92615' x='1231' y='66338'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='32682' id='21' name='Location' w='92615' x='1231' y='33656'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='32' h='98046' id='22' is-fixed='true' param='vert' type-v2='layout-flow' w='4923' x='93846' y='977'>
              <zone h='13309' id='24' name='Location' pane-specification-id='0' param='[federated.1i5c78k0h2fm5a1blay5o0tqzj37].[none:country:nk]' type-v2='color' w='4923' x='93846' y='977'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='950' minheight='950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='28' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98046' id='27' param='vert' type-v2='layout-flow' w='97538' x='1231' y='977'>
                <zone fixed-size='273' h='32679' id='3' is-fixed='true' name='Factory' w='92615' x='1231' y='977'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='274' h='32682' id='21' is-fixed='true' name='Location' w='92615' x='1231' y='33656'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13309' id='24' name='Location' pane-specification-id='0' param='[federated.1i5c78k0h2fm5a1blay5o0tqzj37].[none:country:nk]' type-v2='color' w='4923' x='93846' y='977'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='273' h='32685' id='5' is-fixed='true' name='Device type' w='92615' x='1231' y='66338'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{C6A9B984-F044-43B1-AFEC-E6635F2DC636}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Factory'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1i5c78k0h2fm5a1blay5o0tqzj37].[none:Calculation_1463951362185752579:qk]</field>
            <field>[federated.1i5c78k0h2fm5a1blay5o0tqzj37].[none:Calculation_1463951362185920516:qk]</field>
            <field>[federated.1i5c78k0h2fm5a1blay5o0tqzj37].[none:Document Index (generated):ok]</field>
            <field>[federated.1i5c78k0h2fm5a1blay5o0tqzj37].[none:city:nk]</field>
            <field>[federated.1i5c78k0h2fm5a1blay5o0tqzj37].[none:deviceType:nk]</field>
            <field>[federated.1i5c78k0h2fm5a1blay5o0tqzj37].[none:factory:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6132A647-B055-45F1-A151-C018C2FAA5FB}' />
    </window>
    <window class='worksheet' name='Device type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1i5c78k0h2fm5a1blay5o0tqzj37].[none:deviceType:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1520805C-8225-482E-8CE2-498FC68AD11E}' />
    </window>
    <window class='worksheet' name='Location'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1i5c78k0h2fm5a1blay5o0tqzj37].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1i5c78k0h2fm5a1blay5o0tqzj37].[none:area:nk]</field>
            <field>[federated.1i5c78k0h2fm5a1blay5o0tqzj37].[none:country:nk]</field>
            <field>[federated.1i5c78k0h2fm5a1blay5o0tqzj37].[none:factory:nk]</field>
            <field>[federated.1i5c78k0h2fm5a1blay5o0tqzj37].[none:section:nk]</field>
            <field>[federated.1i5c78k0h2fm5a1blay5o0tqzj37].[none:status:nk]</field>
            <field>[federated.1i5c78k0h2fm5a1blay5o0tqzj37].[sum:Calculation_1463951362186014725:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BC0FC5D1-7205-4E20-B077-2D67CAF9841B}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Device type'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Factory'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Location'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1i5c78k0h2fm5a1blay5o0tqzj37].[none:country:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='21' />
      <device-preview selected='Tablet' />
      <simple-id uuid='{B4CDBBA4-33D3-4020-B258-E6E4AD254916}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      dDkCcA7/P56z+i11Th7CAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Device type' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAWtElEQVR4nO3d2XNc55nf8W+f3vduNBrdaDR2kiBIcBEpS5TkZWyXZ7yMqiY1zkzNhZ3K
      Ve7yJ6RcSe5SSU3lIlW5iksZpzKRHFm27BnN2PLYliWRIkASIEjsewPoFY3e13NywTEl2SQj
      NU+DEM/zqUIVgQbe84I4v37P8j7nNWmapiGEQSlPugNCPEkSAGFolifdAfEZ1Szz07//RzSL
      hy988Qv43fYHftvOnWnyriGmRsIPfH36t79gYz8PZgdf+5M/xue0drPXf0BGANGZ2iEzy7v0
      +xX+23//PvVakVd/8H3eu7XE/PWrlFowc/0aqsWOx+VgefZ9/scr/4uDYpE3/vZvWN/LARAb
      Hmd9do6RyQmWZt7nsKEyO/MBC3PXef311/nZL6/SbtX5yas/4Bfv3kTvM1YJgOiYr6ePyy9+
      mainzs9/9Cq9Z15k5tdvUS/u8cHcMtdvLpDbWmRtY5M3fjHNN/74y9z+9d9jjZ/jzR+/CUB/
      fIS+nhAnJ07QYyvz9ru3uH7zLsm1WwTHL5O4/R6/eut1GqEzrN34DblqU9ffQQIgOlYrF1lf
      miNdtmE3t5m++h7+vhgTl1/k2o9fITxyFhOAyQSaSqvVQm03uPnB+8SHhv6gvbHLf8Tdf/if
      9I5MoQBmxUSjpaKYYG7mKg5/H2aTvkOAnAOIzti9DPpMvDO9yL/619+hx96m8MYbmANh7J5e
      nnvuOc5+7gxazkXAHWfYeYVf/uo9/vTllyk0fkooGr3f1MUXnscOoNgZiMV49tlzrP7yBtff
      /RWf++I3ePHCKOXajyibAzit+u6ypqO4D6CqKooig414tFxym8XtA648e57k5iKOyCkCDlNX
      t9n1AGiaRrvdlgCIY6nj8SS9s0EiV8AXDDPU5+fu4hLuYJTRgTArS3ep4WBqYhxN0+5/CHHc
      dByARDrH1PkLmBWFxdkZBicusDZ3g6ylRMsZIdraZT1XZyzkQNM0zGaznv0WQhcdByAWCbFw
      Z55y04Siakw4LHgVM+liEV/fEL2mKhupAmMhh579FUJXHR+YmyxOJicn0RpVepwWkocV8u0W
      sWCIbCrFdiJNrC+gZ1+F0F3HI4DdAncXFjk9dQ6f08Lq8jKDYxP4Qj5ClTVqjn4GfUd7W1uI
      T+tILoO22205BxDHklybFIYmARCGJgEQhiYBEIYmARCGJgEQhiYBEIYmARCGJgEQhvZY5TWp
      7RXKlh4GvBq3FrZwenycOTXCysIdajg4N3kCk6m7BQ1CPI6OA9BulNne2cMUtOCsFOgbmSAe
      dFBIrqF6YsRaCdayNcZ7nXr2VwhddRyA5YUlxidOsZ6q4u0dIL+3ybt3DxmOOvCGhwiZAmyk
      irSDNtrtthTEiGOpwwCoNFst1peX2DjQiPdMMDp+kvLBB7gDPewkk7RaKWKDF+5PgpPJcOI4
      eqzZoGqzRr7awmszsbK6TjASJxLys7e9Tt3kYiQewWQyyWxQcWzJdGhhaHIZVBiaBEAYmgRA
      GJo8GlF8Zv10epP5rYPHakMCID6zStUmmWLtsdqQQyBhaBIAYWgSAGFoEgBhaBIAYWgSAGFo
      jxWARrVMqdpA0zRymRTlWgPQKB0ecFAoIROgxXHX8X0ATVOZn3mPZvAEcXuZvMnLwfJNnjkz
      zPxqGnvrEO3cFXqcMglOHF8dByC5tUJwYIyDGuzmq1y+dJblfIbt1B4Do2eIscuNxAH+0aAU
      xIiuUHXYpzouiLm7tEbA52bjQGM07KKuajTQCNrt1Ot1KmoNlyskBTGiaxQd6s07DIDCl7/2
      ddrVPN5MnbjfzNyNGRxuP/2xQWZn58hqVp655HnsDgrRTVIQIz6z/vadFabXMo/VhlwGFYYm
      ARCGJgEQhiYBEIYmARCGJgEQhiYBEIYmARCGJgEQhiYBEIYmARCGJgEQhtZxPUAqscl+9pBg
      3wARr8LswgYO970lktaXF6jh5MypUVkiSRxrHQfA3xsl3B/n6rVpbH1OYiemiPmtHCbXaNjD
      9LZ22czVGQk59OyvELrqOABKu8bV6zexBQZxBTysbdxhpVBlNOrAF47TZ6pxPVlgMGCVijDR
      FU+wIgwqTXj+hS9w7do1Wv1+Js9OMX/9Axz+IPvpDForQ39sSirCRNc8wYowqJfy3N7aYvTU
      GZx2WFm8S3jkJL3hILXyKjVrhHGf9bE7KEQ3SUWY+MySijAhHpMEQBiaBEAYmgRAGJoEQBia
      BEAYmgRAGJoEQBiaBEAYmgRAGJoEQBhaxwFo1mvkcjkarXtTnYuHeWqNFqBRLRcpVaqyRJI4
      9jqeDZrNpGi2NRaXNxjtc5KqWykeLHPp7Ai3FhNYWyXGn3mRgEMGGXF8dRyAUNDPrflF3P5e
      dnI5Ll16luUbM2wnEwycmCTGHrcSOS6MyBJJojueaEGMxenjwvkprs/cxmUz09Q0mmgEbDaa
      jSZ1tY7d3iMFMaJrnmhBzOrCbSpNFU+gh/F+H7emZ7C5vPTHhrh1a46UZubyZe9jd1CIbnpk
      QYymabo81UEKYkQ36FEQ88gR4P2332Qzr/H8888xFItgVuQRJ+Lp8shLNFe+8k1O97v5z//x
      3/Ff/vq/cmNp56j6JcSReOQI8Ou/e52M6uff/6e/xq9U+Ke5BBA/oq4J0X2PHAGGRkZpV/O8
      /dbPWMlqfPXKhaPqlxBH4pEjwK/+6Tdc+dZfEHJZcXv9R9UnIY7Mg0cATeXNV19hN5Xm9R/+
      kNdee42l7fQRd02I7nvwCGBS+NN/+V3qpv/N11/+Nodr17lTqB5x14TovoceAt145y1+9MZP
      WFrdhnaLP/vOvznKfglxJB4cAE3j3PNf4T/ETxGJxjArJsyWjm8aC3FsPWSv1vj5T18jka3c
      /8rn/uibnB/vP6JuCXE0HnwSbFL4+p/9FS9/7SVMmoamqcg9YPE0euRxzeuvv4l/bIoxR5F0
      sX5UfRLiyDwyAJcvXMDqD/APb83wpX/x0sdeS2yskDksYbJ5OBFxMrO0TyAQYHJ8gNlbczQ0
      M5cvP4NF5g+JY+yRARgYGWZpfZOXvvgVerzOj70WiY/gDxZYWk9QqZg4c/4CauWQg711/IOT
      RNo7LO2VmIi6UFVVCmKE7rpeEPOzn/yYK1/8PO9fn2Ov5eVELHj/tezuOjuHKhfPT/G7N/n5
      +TU8vS4URcFsMtOuqSiKgqZpMh1a6E6PqfqPDMC3//Iv+NFP/g7F2cefPD/xsddW17fwBMMs
      r20SdMBe9pCaYuN0bISZm7PsqQqXnz+ByWS6/yGEnvTYox4ZgK21ZWptM5ZqjvWdNOc+chn0
      xS999WPfG/nIJNHnnr+iQ9eE6L6H3gjT0Lg1t8A3//y79HlsWCyy3pd4+jz0RtjPfvgD0vkC
      /+dvXsHjsHDlqy9z4UTsaHsnRJc99EbYt779Hb7y0rN4nDbMZrMcw4un0iPPAW7fXuIbf/5d
      InIIJJ5Sj74PEPXz2g9ewW2XQyDxdHpoAPZ31nBGTvL5qImeSJzxYdn5xdPnoTXBaqtFo9Gg
      Xq/z9v/9Pu/MyxMhxNPnoSNAODaEr/feu76WXSZzUDiyTglxVB4agLU7N7k+vwqA3dPPN5+b
      eNi3CvGZ9dAATFy8wsRFuaMrnm7y8H5haBIAYWgdB6BaOmT+9hypXAG13WR54Q77mUM0TSOx
      ucrq1q7UAIhjr+MAFEsVTp2eZG3xDmt35/D2j7C1ssBhZots3Y6luMtuoalnX4XQXcfPOglH
      IizdvkkgEucgt8+430XRamXvIEeo7ywxk8r1VJ6oJyRLJImueKJLJC3cuo5/cJL+Hi9LpRSH
      tRYlTWXIGyR9WCDTytPbc0qWSBJdo8cSSR0fApnMVjKJdRZXNxifOM324m0CkTg9kRHM1X2S
      TTcjPfbH7qAQ3fTIJZL0IkskiW7QY4kkuQwqDE0CIAxNAiAMTQIgDE0CIAxNAiAMTQIgDE0C
      IAxNAiAMTQIgDE0CIAyt49mg96cQmUzwsOlEJpOsLSaOtY5HgPTeFj9/65c0gML+Mm//dpr5
      pTWa1UN++9t3eefXv6HcVHXsqhD663gE6IsNM5wpAlAu13E5rTjsDg72txk6c5l+bZfbO3ku
      DAdQVQmC0J8eE5l1Wf26f3yKfuD2Bx9g6XVhUu8traooiqwQI7qn20skPcru5iqbiR0qNgdR
      t5n9XIEKFk4PjDA9c5Md1cSzL4zf3/kVRc63hb70eEuVghjxmSUFMUI8JgmAMDQJgDA0CYAw
      NAmAMDQJgDA0CYAwNAmAMDQJgDA0CYAwNAmAMDQJgDC0jgNQKea4dvUGTaBROWR6epq7y5uo
      7Sa3b80wfWtelwUMhOimjgPQxoLfYUUFlhaWmbxwiWYhTWp3FXt4nBNBWE5VdOyqEPrruB7A
      6/Xdr0eoaeC0mHCaFPLVKp4+J148LKcrtHsdskSS6IonukRSu9Wk1WrRbDaJeGxsJg/INZqc
      DQ+ytLNNpZVh+ORlWSJJdM0TXSIpk9zF5LST2EowcHIKczXHxNnzeIL9DIcdeGIn6XXrUnEp
      RNd0vIdGBoaJDHz4+eDI+P1/hz76ghDHmFwGFYYmARCGJgEQhiYBEIYmARCGJgEQhiYX6oUu
      tjIlssWa7u1OxAK47N3bTSUAQhdXl5J8sJLWvd1/+60pXHaP7u3+jhwCCUOTAAhDkwAIQ5MA
      CEPT5SS4sL/C9ZU8fb1BJobDXJu5jdpuc/nFz+OyyMIY4vjSJQDFQhmHw4rb4ya3v8ng6Uv0
      awnmd/KcH/LLEklG0KV6J1XVaLfbD97kcVkiaeDUBWKaxuy1a5jCLhS0j/1/yBJJolMmePi+
      8ySXSPqo5M46e9kCJc3MZGyY6ekbbGtw6YUxFMWEpmmyRNLTrkvvbybl4ctr6bFJXQIQiY8S
      iX/4+QsvvahHs0J0nbwtC0OTAAhDkwAIQ5MACEOTAAhDkwAIQ5MACEOTgpin0A/fW6Ncb+ne
      7jeeGSTsd+re7pOkewA0VWV9ZYGaycnkiRGZAvEELCTyHFYaurf7pbP9urf5pOl+CFRMb1Cz
      hujhkM0D/f8IQuhJ9xGgXCzg740TMdW5njxkpKdP7010ZD9fYTtT0r3dHo+d8aj/ga9VGy1u
      b+V036ZZMXFpLKx7u0akewC8gSAbmQy0MvRHp/RuvmNLu4e8eX1T93bPD/c8NACFSoNX313T
      fZt2q1kCoBPdD4HcoUF8SomKvY8Bv1Xv5oXQle4jgMmkMDR2Su9mhegKk9bltYva7TbtdvvI
      V4jRNO1jdQiFaoN8Wf+TcpfNQq/Pcf9zVVXvb7PZUtnL679OmmKCeOjDZ+V8dJsAiVyZtqr/
      nzXid2K33vs7/m63+d1VvlyxRqkLl16jASc2y71tqqr6seKqbLH22Jd7ux4A4FgE4Kg8id/1
      SWzz93fGz+o2jyQAQhxXRz4VYmH2FjUVUJvkDor3v57d26WuQi65xV6mRKtWJJUrfIqWm6yu
      bHTUp1Rik9m5OQ6KVebnZmlrGtn0PrVGm0IuyezsLHuZ/Kdqc39nndm5OfKlekd9elyZxCY3
      Z2dZ3tjp4lZqpJKHAOwmdj/1T68v32F2dpZE6g8vFe8mdh9YZ6+pVdLpT7Nf3P9B1pbuMje/
      QL31YZH9kU6FaNfylGtl1jfTTI76qJbr7FTyHKYzBHw2DlJ+mtk8Ta2M2Wum4e5jfWmBQstM
      v89KIn3A8IlJsjvLVJtt/L1xwm6NhbUdovE422vLFIsHDI6fJuT7ZLfsm+Usm5kql8+dRVU1
      qoUkS+u9WGppzK4gi0vrPPvcc6jtT/5ki1Y5zVa2xbPnzqCqsHJ3jmJd4/TZs6zeuUFbVYiM
      nKJWyDIyPMj29i5mtUYyV2J8YoJcOsvIYB+b22lMrRLZQoWxibMUMwlS2SIXLpzDrDz6MOAw
      W+TU+fO4gJ1EgvjAAJsbm/jdZvbSBfx9IXZXtlGsFibPT7G/vsxBqc7pc+fI7qySydeZmBxl
      6c4SrmCYk6ODD6jBrZNKHtIX8bO7u0s45OX2nWW8oSiDIRcLq5vYPUH8No2e2BDp3R1UtU3/
      4AiJrQ1K9Tbnpqa4feMaHudZitU2YWebVKHJ9NX3OXXuEmdOjnxsi6paI50qEw77KGSTrG/v
      4e+N4bPU2drPEh0ch0qavUyB0VOTlLL7ZHMHhNxWVG+MM2EvrUqGJD1YKqmjHQF2tnboHTxB
      IbMFtDjIFdndWic6dpro4Ajl1AYqNswmlVyhQm/QyerGPlOTY6xuJhgdHmB1eYVqE86dO0ch
      k2RhdZtnLl6kv9dPKBpnamKU/dQnf0hr6fCAnlAERVGwWMw4/BG0Uoq6qgElzOYgZkXBav3k
      7xWH6T16Y4MoihlTNUnZEubcyRiLKzu0FTvnL54mvZ2kmMtymNmlotnZ2NljdCjM0tIWufQ+
      2b1tWlYruVKLixemWFm4w8bqOhNnzvD/2fcBaDcrzM/Osrq1R+7gAIB0Ok0xu4fm7iPit+Ly
      RjkZc7Ofr+N0OVHqORY3dsmVVC5enGJvcYFAfJRcMkGr/eAj5Z2NZWZnZ0nny6zdXSA8NEpy
      dwvFasNuNbO2vorDorKbOiCTzeEyN9lJHlBuuwAwKQqD/T1kcnlyhTKtWoliw0x8cIjJ39v5
      f5/N4cBiVlhdWyWby+H0+An6nKxtJRgdjrK8uMrm2gpjp6dIF2uM9PkxWyxQK3BYbVHK544y
      ABoHxQpavQLNOuXmvXdUh7eHkM+J2eKkmt/F5g3iMatkGwoOM0T7+zGbTDTrZXL5IuFw6N5J
      kOneUzGsCtSabRrN1j+fIH26p2V4gyHS+9u02y1q9SYAY6NxVtd2AA/NRoZmq02t9skPZQJ9
      AyQ3V2m3mzRUhUa1TK1axWqzfthHIB4NMD2/zWC0h1qlTC5fJRLpYbg/yMxyinjYT6vZoFmv
      oFjsBHr7cNsttOpVqo0WxUKBh53Bma0uzp4/z/hQP6htms065WodxWIn2td775v+uS9qq0Yi
      VWR8eABQaLcatBoNFIuJdDKF1xd8aOjiIyc5f/484YAbixlSqTSBQA+bS4v0Do3jdzsJ9MXI
      rN3C2TNAKDZMemWa8eEeADS1zUYiRyToRm23KRWL9w59NA1VVamVSzTaKoXCHx723L27xNjJ
      U7gcVgaGx4kEbdy+s0qjViGXL9MXCeHvieB1WIiHPCxtp2k26rSBVqtFqVTC/L3vfe97n/gv
      +xg0tY3V4SEW6ycU8NLCitvpwOtz43I6wWRCUcyEI1ECPgcmq5eA14XFasXpdBIK+khl8oQj
      UXweF06nC6vVQjwWZXV5Gbvbj9fjwulyYrXZcdptn6hfitWJ166xsr6Fxx/E43Lg9Yew28z0
      9ISIhHwsr6xicXpwO+2fsE0XHmub1Y0dvL1x3KYyyUKbU+OD2KxWXE4XFouNYCiESVEIh/z0
      +L1kDor0RaP4PU7S+TLDgzFcVo3NRI6J0ydx2G04nU7q5Tw11Uq5mMfr9T0w8BaLBYfLiQK4
      7WbWtvboi0boCQaxO1xYzApWqw2X24nN6UFpFqhoNsLhPkJuhY2dFCMTE9QPM1icPkIB7wOu
      vihYLDacLhtWq5XY0BDFXBq7O0A8HmF7Y4tQX4RgIIimmYjHo1jMFvb3k/QPDNKqFthMJImP
      TRDweake7FE3OQn3hgj7HWzs5XAqKprdSSGXw+fzYUJhf2eTTLHMyGCUzZ0kkWgEu9JmazfL
      6PgYA+Eg6ewh4UgUr9uJ0+XE7Q/RLCRJpA4ID4yQT6xi8/bw/wC2ogWdhKaTJwAAAABJRU5E
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Factory' width='192'>
      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
      nrzq64llDlLZUytKiNNyZABW5x9wd2YFAJsrzO/fHDu1ooQ4LUcGYGz6FmPTckZXnG+tO0tJ
      iFMgARCG1nAASvlDZmces5/MoNWrRBbm2Ds4RNd1ohsrrGzsSA+AaHkNByCTLTA6PsHq4hyr
      8zO0dw2wtbLA4cEWByUrlvwu0cNKM2sVoukavtZJMBRiaeYBnlAvqeQewx4nOauV3eQB/s4p
      elS4G0vT1R6QJZIM7lwukbT46B7u3nG6OtqJ5PY5LNbIaXX6PD72Dw9JaGn8HRdliSTR0ksk
      NV6ZauYgusbiyjpD4+NsLc3g7uylo3MASynGXsXBoN/+q7cjxBk6domkZpElkoytlZdIat2x
      SYhTIAEQhiYBEIYmARCGJgEQhiYBEIYmARCGJgEQhiYBEIYmARCGJgEQhtbwbNCnU4gUBY6a
      TqQorXxlbCEaHwEOdjf58Q9/QgXI7kV49+f3mF1apVo85Ofv/Tvv/fRn5CutOw9cCPg0DTHd
      /fQfPLlWUD5fxumwYLfZSce26Jt8iR5ll8fbKaYHfC29RI44eXoLP/5NWf06PDxFGJi9ewez
      3wG6jqZrT6dAf3KVGGFALfzYNxyAnc0VNqPbFKx2wm0m9hIZCrqZsZ4h7t1/wI6mcP3W0DMB
      kBAYUys/7tIQI06cNMQI0aIkAMLQJADC0CQAwtAkAMLQJADC0CQAwtAkAMLQJADC0CQAwtCa
      MhlO/Gb0Ugm9WDjrMn5DCqrPd9ZFNJ0E4AxU7t6h/C//fNZl/GZUFfe3/uasq2i6hg+BitkU
      tz+4TxWoFg65d+8ec5F1tHqN2Yf3ufdgBk0WxRAtruEA1DDhsVvRgKWFCOPT16lnE+zvrGAJ
      DDHiNxGJ5ZtYqhDN1/AhUHu7+2mfQ1EHp1nBoaikiwVcQSftqoul/QL1oEOWSPoPXtQOuVqt
      1tDvncslkuq1KrVajWq1SrjNykYsRaJSYWrgAgvRTUr1JBeGr8kSSc9RV1/MD9/M5saeLudy
      iaSD2A6Kw0Z0M0r3yBTmYpLRySu4fGEGgg5cXRcJtlmaWasQTdfwCBDq6SfU8/H3vQPDT7/2
      f/IGIVpY645NQpwCCYAwNAmAMDQJgDA0CYAwNAmAMDQJgDA0CYAwNAmAMDQJgDA0CYAwNAmA
      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
    </thumbnail>
    <thumbnail height='192' name='Location' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
